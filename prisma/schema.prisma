// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// This is your Prisma schema file,
generator client {
  provider = "prisma-client-js"
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Donation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  donationDetails DonationDetails
  proofDetails    ProofDetails[]
  paymentDetails  PaymentDetails
  donorDetails    DonorDetails
}

type DonationDetails {
  status               DonationStatus
  cause                Cause
  amountDonatedInCents Int
  donatedAt            DateTime
  adheringLabels       String[]
}

type ProofDetails {
  // Amount distributed for this specific donation. 
  // The parent proof has the total amount in this distribution
  amountDistributedInCents Int
  parentProofId            String
}

type PaymentDetails {
  transactionStatus    TransactionStatus
  amountChargedInCents Int
  currency             Currency
  paymentMethod        PaymentMethod
}

type PaymentMethod {
  creditCard PaymentMethodCreditCard?
  acssDebit  PaymentMethodAcssDebit?
  cash       Boolean? // Indicates if the payment method is cash
}

type PaymentMethodCreditCard {
  processorFeeInCents   Int
  ccEndsIn              Int
  ccExpiryMonth         Int
  ccExpiryYear          Int
  stripePaymentIntentId String
  stripeCustomerId      String
  stripeBalanceTxnId    String
}

type PaymentMethodAcssDebit {
  processorFeeInCents   Int
  stripePaymentIntentId String
  stripeCustomerId      String
  stripeBalanceTxnId    String
}

type DonorDetails {
  firstName         String
  lastName          String
  email             String
  address           Address
  stripeCustomerIds String[]
}

model Proof {
  id                       String   @id @default(auto()) @map("_id") @db.ObjectId
  amountDistributedInCents Int
  messageToDonor           String
  regionDistributed        String
  adheringLabels           String[]
  donations                String[]
}

type Cause {
  name   String
  region String
}

type Address {
  street  String
  city    String
  zip     String
  state   String
  country String
}

enum DonationStatus {
  PROCESSING
  DELIVERED_TO_PARTNERS
  PARTIALLY_DISTRIBUTED
  FULLY_DISTRIBUTED
}

enum TransactionStatus {
  PROCESSING
  PAYMENT_FAILED
  SUCCEEDED
}

enum Currency {
  CAD
  USD
}
